name: Release
on:
  pull_request:
  push:
    tags:
      - v*.*.*

permissions:
  contents: write
  id-token: write
  packages: write

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ vars.GO_VERSION }}
      - uses: sigstore/cosign-installer@v3
      - uses: anchore/sbom-action/download-syft@v0
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          install-only: true
          version: latest
      - name: Run GoReleaser
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        run: |
          goreleaser release --clean
      - name: Run GoReleaser
        if: github.event_name == 'pull_request'
        run: |
          goreleaser release --snapshot --clean
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release
          path: dist/*

  pages:
    concurrency:
      group: "pages"
      cancel-in-progress: false
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: release
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "."
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
